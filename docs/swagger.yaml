basePath: /
definitions:
  models.AddSongDTO:
    properties:
      group:
        maxLength: 255
        type: string
      song:
        maxLength: 255
        type: string
    required:
    - group
    - song
    type: object
  models.GetManySongs:
    properties:
      page:
        type: integer
      size:
        type: integer
      songs:
        items:
          $ref: '#/definitions/models.Song'
        type: array
    type: object
  models.Song:
    properties:
      created_at:
        type: string
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
      updated_at:
        type: string
    type: object
  models.UpdateSongDTO:
    properties:
      group:
        maxLength: 255
        type: string
      link:
        maxLength: 255
        type: string
      release_date:
        maxLength: 50
        type: string
      song:
        maxLength: 255
        type: string
      text:
        type: string
    type: object
  response.AddSongResponse:
    properties:
      id:
        type: integer
    type: object
  response.SuccessResponse:
    properties:
      success:
        type: boolean
    type: object
host: localhost:4444
info:
  contact: {}
  description: This is a sample server for a song API.
  title: Your API Title
  version: "1.0"
paths:
  /song:
    post:
      consumes:
      - application/json
      description: Добавить новую песню по DTO. Макс. длина песни и группы 255, допускается
        только Латиница
      parameters:
      - description: Song creation data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.AddSongDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully added new song
          schema:
            $ref: '#/definitions/response.AddSongResponse'
        "400":
          description: Invalid data for adding the song
        "500":
          description: Failed to add the song
      summary: Add a new song
      tags:
      - Song
  /song/{id}:
    delete:
      description: Deletes a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Successfully deleted the song
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Invalid ID format
        "404":
          description: Song not found
        "500":
          description: Internal server error
      summary: Remove a song
      tags:
      - Song
    get:
      consumes:
      - application/json
      description: Retrieves the text (lyrics) of a song by its ID with pagination
        support
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number (default is 1)
        in: query
        name: page
        type: integer
      - description: Page size (default is 5)
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the song lyrics
          schema:
            type: string
        "400":
          description: Invalid song ID or request parameters
        "500":
          description: Failed to retrieve song lyrics
      summary: Get song lyrics
      tags:
      - Song
    patch:
      consumes:
      - application/json
      description: Обновить запись о песне по DTO. Макс. длина группы и песни 255,
        допустима только Латиница.
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Song Update Payload
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSongDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated the song
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Invalid input data or invalid ID format
        "404":
          description: Song not found
        "500":
          description: Internal server error
      summary: Update a song
      tags:
      - Song
  /songs:
    get:
      consumes:
      - application/json
      description: Retrieves a list of songs with optional filters, pagination, and
        sorting
      parameters:
      - description: Page number (default is 1)
        in: query
        name: page
        type: integer
      - description: Page size (default is 5)
        in: query
        name: size
        type: integer
      - description: Sorting order (true for ascending, false for descending)
        in: query
        name: isAscending
        type: boolean
      - description: Filter by group name
        in: query
        name: group
        type: string
      - description: Filter by song name
        in: query
        name: song
        type: string
      - description: Filter by release date
        in: query
        name: release_date
        type: string
      - description: Filter by text
        in: query
        name: text
        type: string
      - description: Filter by link
        in: query
        name: link
        type: string
      - description: Sort by group name
        in: query
        name: group
        type: boolean
      - description: Sort by song name
        in: query
        name: song
        type: boolean
      - description: Sort by release date
        in: query
        name: releaseDate
        type: boolean
      - description: Sort by text
        in: query
        name: text
        type: boolean
      - description: Sort by link
        in: query
        name: link
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of songs
          schema:
            $ref: '#/definitions/models.GetManySongs'
        "400":
          description: Invalid query parameters
        "500":
          description: Failed to retrieve the list of songs
      summary: Get a paginated list of songs
      tags:
      - Song
swagger: "2.0"
