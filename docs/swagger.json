{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for a song API.",
        "title": "Your API Title",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:4444",
    "basePath": "/",
    "paths": {
        "/song": {
            "post": {
                "description": "Добавить новую песню по DTO. Макс. длина песни и группы 255, допускается только Латиница",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "Add a new song",
                "parameters": [
                    {
                        "description": "Song creation data",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSongDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully added new song",
                        "schema": {
                            "$ref": "#/definitions/response.AddSongResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data for adding the song"
                    },
                    "500": {
                        "description": "Failed to add the song"
                    }
                }
            }
        },
        "/song/{id}": {
            "get": {
                "description": "Retrieves the text (lyrics) of a song by its ID with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "Get song lyrics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default is 5)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the song lyrics",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid song ID or request parameters"
                    },
                    "500": {
                        "description": "Failed to retrieve song lyrics"
                    }
                }
            },
            "delete": {
                "description": "Deletes a song by its ID",
                "tags": [
                    "Song"
                ],
                "summary": "Remove a song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the song",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format"
                    },
                    "404": {
                        "description": "Song not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "patch": {
                "description": "Обновить запись о песне по DTO. Макс. длина группы и песни 255, допустима только Латиница.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "Update a song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Song Update Payload",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateSongDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the song",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data or invalid ID format"
                    },
                    "404": {
                        "description": "Song not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/songs": {
            "get": {
                "description": "Retrieves a list of songs with optional filters, pagination, and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "Get a paginated list of songs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default is 5)",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sorting order (true for ascending, false for descending)",
                        "name": "isAscending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by group name",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by song name",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by release date",
                        "name": "release_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by link",
                        "name": "link",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort by group name",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort by song name",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort by release date",
                        "name": "releaseDate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort by link",
                        "name": "link",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of songs",
                        "schema": {
                            "$ref": "#/definitions/models.GetManySongs"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters"
                    },
                    "500": {
                        "description": "Failed to retrieve the list of songs"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AddSongDTO": {
            "type": "object",
            "required": [
                "group",
                "song"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "maxLength": 255
                },
                "song": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.GetManySongs": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Song"
                    }
                }
            }
        },
        "models.Song": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateSongDTO": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string",
                    "maxLength": 255
                },
                "link": {
                    "type": "string",
                    "maxLength": 255
                },
                "release_date": {
                    "type": "string",
                    "maxLength": 50
                },
                "song": {
                    "type": "string",
                    "maxLength": 255
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "response.AddSongResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "response.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}